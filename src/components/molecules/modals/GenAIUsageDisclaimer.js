import React, { Fragment, useState, useEffect } from 'react';
import { PropTypes } from 'prop-types';
import { Dialog, Transition } from '@headlessui/react';
import Button from 'components/atoms/common/Button';
import { BUTTON_INTENT_TYPES, BUTTON_TYPES } from 'constants/Common';
import TextInput from 'components/atoms/common/TextInput';
import GenerateFlowTestModal from './GenerateFlowTestModal';
import { setLocalStorageItem } from 'utils/common';

const GenAIUsageDisclaimer = ({ closeFn = () => null, open = false, collectionId }) => {
  const [generateFlowTestModalOpen, setGenerateFlowTestModalOpen] = useState(false);
  return (
    <>
      <Transition appear show={open} as={Fragment}>
        <Dialog
          as='div'
          className='relative z-10'
          onClose={() => {
            closeFn();
          }}
        >
          <Transition.Child
            as={Fragment}
            enter='ease-out duration-300'
            enterFrom='opacity-0'
            enterTo='opacity-100'
            leave='ease-in duration-200'
            leaveFrom='opacity-100'
            leaveTo='opacity-0'
          >
            <div className='fixed inset-0 bg-black/25' />
          </Transition.Child>

          <div className='fixed inset-0 overflow-y-auto'>
            <div className='flex min-h-full items-center justify-center p-4 text-center'>
              <Transition.Child
                as={Fragment}
                enter='ease-out duration-300'
                enterFrom='opacity-0 scale-95'
                enterTo='opacity-100 scale-100'
                leave='ease-in duration-200'
                leaveFrom='opacity-100 scale-100'
                leaveTo='opacity-0 scale-95'
              >
                <Dialog.Panel className='w-full max-w-2xl transform overflow-hidden rounded bg-white p-6 text-left align-middle shadow-xl transition-all'>
                  <Dialog.Title as='h3' className='border-b border-gray-300 pb-4 text-center text-lg font-semibold'>
                    Disclaimer
                  </Dialog.Title>
                  <div className='flex flex-col pb-6'>
                    <p className='mt-2 text-xl font-semibold italic 2xl:mt-4'>
                      This tool utilizes OpenAI&#39;s and Amazon Bedrock Claude language model to provide information
                      and assistance. While we strive to ensure the accuracy and reliability of the information
                      provided, the responses generated by the model may not always be accurate, complete, or
                      up-to-date.
                    </p>
                    <ul className='font-montserrat'>
                      <li className='py-2'>
                        <span className='font-semibold'>Information Accuracy:</span> The information and responses
                        provided by the tool are generated based on the data and patterns recognized by OpenAI&#39;s
                        language model. Users should independently verify any critical information before relying on it.
                      </li>
                      <li className='py-2'>
                        <span className='font-semibold'>No Professional Advice:</span> The responses generated by the
                        tool do not constitute professional advice, including but not limited to medical, legal,
                        financial, or any other professional service. Always seek the advice of a qualified professional
                        with any questions you may have.
                      </li>
                      <li className='py-2'>
                        <span className='font-semibold'>User Responsibility:</span> Users are responsible for how they
                        interpret and use the information provided by the tool. The developers and operators of this
                        tool are not liable for any damages or losses resulting from the use or misuse of the tool.
                      </li>
                      <li className='py-2'>
                        <span className='font-semibold'>Company Policies:</span> If your company has policies or
                        guidelines related to the use of OpenAI or AI-generated content, please ensure that you adhere
                        to those policies when using this tool. It is your responsibility to comply with your
                        company&#39;s regulations and standards.
                      </li>
                      <li className='py-2'>
                        <span className='font-semibold'>Privacy and Data Use:</span> The tool may collect data input by
                        users to improve the quality of the service. Please review our privacy policy for more
                        information on how we handle your data. By using this tool, you acknowledge that you understand
                        and agree to this disclaimer and our terms of service.
                      </li>
                    </ul>
                  </div>
                  <div className='flex items-center gap-2 border-t border-gray-300 pt-6'>
                    <Button
                      btnType={BUTTON_TYPES.primary}
                      intentType={BUTTON_INTENT_TYPES.error}
                      isDisabled={false}
                      onClickHandle={() => {
                        closeFn();
                      }}
                      fullWidth={true}
                    >
                      Cancel
                    </Button>
                    <Button
                      btnType={BUTTON_TYPES.primary}
                      isDisabled={false}
                      fullWidth={true}
                      onClickHandle={() => {
                        closeFn();
                        setGenerateFlowTestModalOpen(true);
                        setLocalStorageItem('show_gen_ai_disclaimer', false);
                      }}
                    >
                      Acknowledge
                    </Button>
                  </div>
                </Dialog.Panel>
              </Transition.Child>
            </div>
          </div>
        </Dialog>
      </Transition>
      <GenerateFlowTestModal
        closeFn={() => setGenerateFlowTestModalOpen(false)}
        open={generateFlowTestModalOpen}
        collectionId={collectionId}
      />
    </>
  );
};

export default GenAIUsageDisclaimer;
